# This workflow generates SLSA provenance for the static site artifacts.
# The generation satisfies level 3 for the provenance requirements - see https://slsa.dev/spec/v0.1/requirements
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

name: SLSA Static Site Provenance Generator
on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      digests: ${{ steps.hash.outputs.digests }}

    steps:
      - uses: actions/checkout@v4

      # ========================================================
      #
      # Step 1: Build the static site artifacts.
      #
      # ========================================================
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build static site
        run: |
          # Run the netlify build process to generate config.json and process HTML
          node netlify-build.mjs
          
          # Ensure we have the key artifacts for provenance
          ls -la static/
          
          # Verify critical files exist
          test -f static/index.html
          test -f static/config.json
          test -f static/research.html

      # ========================================================
      #
      # Step 2: Generate provenance subjects for actual artifacts
      #         that get deployed to production
      #
      # ========================================================
      - name: Generate subject for provenance
        id: hash
        run: |
          set -euo pipefail

          # List the key artifacts that should have provenance
          # These are the core files that get deployed and should be verified
          artifacts=(
            "static/index.html"
            "static/config.json"
            "static/research.html"
            "static/backend.html"
            "netlify.toml"
          )
          
          # Verify all artifacts exist
          for artifact in "${artifacts[@]}"; do
            if [[ ! -f "$artifact" ]]; then
              echo "ERROR: Required artifact $artifact not found"
              exit 1
            fi
          done
          
          # Generate the subjects (base64 encoded).
          echo "hashes=$(sha256sum "${artifacts[@]}" | base64 -w0)" >> "${GITHUB_OUTPUT}"

  provenance:
    needs: [build]
    permissions:
      actions: read   # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.digests }}"
      upload-assets: true # Optional: Upload to a new release
